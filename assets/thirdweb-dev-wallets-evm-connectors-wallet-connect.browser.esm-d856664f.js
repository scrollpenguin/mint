import{aT as d,aJ as l,aU as Q,aK as I,aV as y,aM as i,aZ as o,aL as D,aW as k,aY as q,aX as Y}from"./index-3a18dd9b.js";import{W as z,U as L,S as O,g as X}from"./url-bc88b2b6.browser.esm-fbba6de9.js";const Z=new Set([1,137,10,42161,56]),j="eip155",x="wagmi.requestedChains",N="wallet_addEthereumChain",S="last-used-chain-id";var n=new WeakMap,C=new WeakMap,u=new WeakMap,P=new WeakSet,H=new WeakSet,E=new WeakSet,M=new WeakSet,g=new WeakSet,A=new WeakSet,U=new WeakSet,W=new WeakSet;class et extends z{constructor(s){super({...s,options:{isNewChainsStale:!0,...s.options}}),d(this,W),d(this,U),d(this,A),d(this,g),d(this,M),d(this,E),d(this,H),d(this,P),l(this,"id",Q.walletConnect),l(this,"name","WalletConnect"),l(this,"ready",!0),I(this,n,{writable:!0,value:void 0}),I(this,C,{writable:!0,value:void 0}),I(this,u,{writable:!0,value:void 0}),l(this,"onAccountsChanged",e=>{e.length===0?this.emit("disconnect"):this.emit("change",{account:y(e[0])})}),l(this,"onChainChanged",async e=>{const a=Number(e),t=this.isChainUnsupported(a);await i(this,u).setItem(S,String(e)),this.emit("change",{chain:{id:a,unsupported:t}})}),l(this,"onDisconnect",async()=>{await o(this,g,f).call(this,[]),await i(this,u).removeItem(S),this.emit("disconnect")}),l(this,"onDisplayUri",e=>{this.emit("message",{type:"display_uri",data:e})}),l(this,"onConnect",()=>{this.emit("connect",{provider:i(this,n)})}),D(this,u,s.options.storage),o(this,P,T).call(this),this.filteredChains=this.chains.length>50?this.chains.filter(e=>Z.has(e.chainId)):this.chains}async connect(){var a;let{chainId:s,pairingTopic:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{let t=s;if(!t){const w=await i(this,u).getItem(S),c=w?parseInt(w):void 0;c&&!this.isChainUnsupported(c)?t=c:t=(a=this.filteredChains[0])==null?void 0:a.chainId}if(!t)throw new Error("No chains found on connector.");const r=await this.getProvider();this.setupListeners();const p=await o(this,E,b).call(this);if(r.session&&p&&await r.disconnect(),!r.session||p){const w=this.filteredChains.filter(c=>c.chainId!==t).map(c=>c.chainId);this.emit("message",{type:"connecting"}),await r.connect({pairingTopic:e,chains:[t],optionalChains:w.length>0?w:[t]}),await o(this,g,f).call(this,this.filteredChains.map(c=>{let{chainId:K}=c;return K}))}const v=await r.enable();if(v.length===0)throw new Error("No accounts found on provider.");const _=y(v[0]),m=await this.getChainId(),G=this.isChainUnsupported(m);return{account:_,chain:{id:m,unsupported:G},provider:new k(r)}}catch(t){throw/user rejected/i.test(t==null?void 0:t.message)?new L(t):t}}async disconnect(){const s=()=>{if(!(typeof localStorage>"u"))for(const t in localStorage)t.startsWith("wc@2")&&localStorage.removeItem(t)};s();const e=await this.getProvider();(async()=>{try{await e.disconnect()}catch(t){if(!/No matching key/i.test(t.message))throw t}finally{o(this,M,R).call(this),await o(this,g,f).call(this,[]),s()}})()}async getAccount(){const{accounts:s}=await this.getProvider();if(s.length===0)throw new Error("No accounts found on provider.");return y(s[0])}async getChainId(){const{chainId:s}=await this.getProvider();return s}async getProvider(){let{chainId:s}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(i(this,n)||await o(this,P,T).call(this),s&&await this.switchChain(s),!i(this,n))throw new Error("No provider found.");return i(this,n)}async getSigner(){let{chainId:s}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const[e,a]=await Promise.all([this.getProvider({chainId:s}),this.getAccount()]);return new k(e,s).getSigner(a)}async isAuthorized(){try{const[s,e]=await Promise.all([this.getAccount(),this.getProvider()]),a=await o(this,E,b).call(this);if(!s)return!1;if(a&&e.session){try{await e.disconnect()}catch{}return!1}return!0}catch{return!1}}async switchChain(s){var a;const e=this.chains.find(t=>t.chainId===s);if(!e)throw new O(`Chain with ID: ${s}, not found on connector.`);try{const t=await this.getProvider(),r=o(this,U,F).call(this),p=o(this,W,J).call(this);if(!r.includes(s)&&p.includes(N)){const _=(a=e.explorers)!=null&&a.length?{blockExplorerUrls:[e.explorers[0].url]}:{};await t.request({method:N,params:[{chainId:q(e.chainId),chainName:e.name,nativeCurrency:e.nativeCurrency,rpcUrls:X(e),..._}]});const m=await o(this,A,V).call(this);m.push(s),await o(this,g,f).call(this,m)}return await t.request({method:"wallet_switchEthereumChain",params:[{chainId:q(s)}]}),e}catch(t){const r=typeof t=="string"?t:t==null?void 0:t.message;throw/user rejected request/i.test(r)?new L(t):new O(t)}}async setupListeners(){i(this,n)&&(o(this,M,R).call(this),i(this,n).on("accountsChanged",this.onAccountsChanged),i(this,n).on("chainChanged",this.onChainChanged),i(this,n).on("disconnect",this.onDisconnect),i(this,n).on("session_delete",this.onDisconnect),i(this,n).on("display_uri",this.onDisplayUri),i(this,n).on("connect",this.onConnect))}}async function T(){return i(this,C)||D(this,C,o(this,H,$).call(this)),i(this,C)}async function $(){const{default:h,OPTIONAL_EVENTS:s,OPTIONAL_METHODS:e}=await Y(()=>import("./index.es-c248348f.js"),["assets/index.es-c248348f.js","assets/index-3a18dd9b.js","assets/index-2ef0605c.css","assets/_commonjs-dynamic-modules-302442b1.js","assets/tslib.es6-c2094241.js"]),[a,...t]=this.filteredChains.map(r=>{let{chainId:p}=r;return p});a&&D(this,n,await h.init({showQrModal:this.options.qrcode!==!1,projectId:this.options.projectId,optionalMethods:e,optionalEvents:s,chains:[a],optionalChains:t,metadata:{name:this.options.dappMetadata.name,description:this.options.dappMetadata.description||"",url:this.options.dappMetadata.url,icons:[this.options.dappMetadata.logoUrl||""]},rpcMap:Object.fromEntries(this.filteredChains.map(r=>[r.chainId,r.rpc[0]])),qrModalOptions:this.options.qrModalOptions}))}async function b(){if(o(this,W,J).call(this).includes(N)||!this.options.isNewChainsStale)return!1;const s=await o(this,A,V).call(this),e=this.filteredChains.map(t=>{let{chainId:r}=t;return r}),a=o(this,U,F).call(this);return a.length&&!a.some(t=>e.includes(t))?!1:!e.every(t=>s.includes(t))}function R(){i(this,n)&&(i(this,n).removeListener("accountsChanged",this.onAccountsChanged),i(this,n).removeListener("chainChanged",this.onChainChanged),i(this,n).removeListener("disconnect",this.onDisconnect),i(this,n).removeListener("session_delete",this.onDisconnect),i(this,n).removeListener("display_uri",this.onDisplayUri),i(this,n).removeListener("connect",this.onConnect))}async function f(h){await i(this,u).setItem(x,JSON.stringify(h))}async function V(){const h=await i(this,u).getItem(x);return h?JSON.parse(h):[]}function F(){var s,e,a;return i(this,n)?((a=(e=(s=i(this,n).session)==null?void 0:s.namespaces[j])==null?void 0:e.chains)==null?void 0:a.map(t=>parseInt(t.split(":")[1]||"")))??[]:[]}function J(){var s,e;return i(this,n)?((e=(s=i(this,n).session)==null?void 0:s.namespaces[j])==null?void 0:e.methods)??[]:[]}export{et as WalletConnectConnector};
